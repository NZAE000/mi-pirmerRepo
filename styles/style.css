/*Estilo en cascada:
	
		jerarquia:				!important
								estilo en linea
								identificadores	(id)
								clases			(class)
								pseudo-clases   (ej: hover)
								atributos		
								elementos
								pseudo-elementos

		conceptos:				*Responsive-design: adaptar la pagina a distintos dispositivos: moviles, pc, tablets, etc.
								*Medidas fijas(absolutas): cm, mm, pt, in, pc. Son aquellas que especifican una medida en términos absolutos, sin tener en cuenta el contexto donde se están aplicando.
								*Medidas relativas:
													%: porcentaje (depende de la caja que contiene tal elemnto)
													em: Altura de la fuente
													rem: Root-em
													vw: Viewport width
													vh: Viewport Height
													vmin: Viewport menor, entre altura o anchura
													vmax: Viewport mayor, entre altura o anchura
													ex: anchura de la fuente para la letra "x"
													ch: la anchura del carácter "0" (cero)

										Las unidades relativas de CSS son aquellas que tienen en cuenta el contexto donde se encuentran. Son relativas a las dimensiones del contenedor donde se han definido.

								*BOX-MODEL:
										-line-height: modifica el contenido.
										-diplay:
											inline: el elemento se renderizará en línea con otros elementos.
											block: hace que el comportamiento del elemento sea como un bloque. Los elementos hijos en block se adecuan al tamaño de la caja del padre.
											inline-block: se redereiza en linea con otros elementos pero a su vez adquiere propiedades como establecer un ancho y alto en el elemento.
										
										-box-sizing:
											border-box: Al cambiar de tamaño de alguna caja (ej: widht, height), no considera si el contenido tiene algun borde (border) o relleno (padding). 
											content-box: Si es que el contenido tiene borde o relleno, los considera al momento aplicar cambios de tamaño de la caja.

										-box-shadow: para la sombra. Parametros: (px(en X), px(en Y), px(desenfoque)), px(grosor borde), color).

										-padding:
												Para separar la distancia entre el contenido y los bordes de su caja. 
												Separacion en top, right, bottom y left (parametricamente funciona ej: padding: 10px 10px 20px 20px;)
										-border:
											
											border-radius: para redondear las esquinas de la box.
											border-top-width, border-right-width, border-botton-width, border-left-width: aumentar grosor;
											border color: para el color deborde.
											etc..
											Para simplificar estas propíedades en border:
												border: grosor(general) estilo(solid, dashed, double, groove, ridge, inset, outset) color;
											

										-margin:
												Para separar distancia entre una box a otra. Tales son top, right, bottom y left (parametricamente funciona ej: margin: 10px 10px 20px 20px)

										-position:
											static: los elementos se posicionan de acuerdo al flujo normal de la página. Es la posición natural de los elementos. No son afectados por las propiedades top, bottom, left y right.
											relative: los elementos se posicionan de forma relativa a su posición normal.
											fixed: los elementos se posicionan de forma relativa a la ventana del navegador. Su posición permanece fija aunque se desplace la ventana.
											absolute: los elementos se posicionan de forma relativa al primer elemento padre que tenga una posición distinta a static.

										-overflow: La propiedad CSS overflow especifica: si recortar contenido, dibujar barras de desplazamiento o mostrar el contenido excedente en un elemento a nivel de bloque.
										-transition: Las transiciones CSS le permiten cambiar los valores de propiedad sin problemas, durante un período determinado. Pase el mouse sobre el elemento de abajo para ver un efecto de transición de CSS.
										-float: La propiedad float ubica un elemento al lado izquierdo o derecho de su contenedor, permitiendo a los elementos de texto y en línea aparecer a su costado. El elemento es removido del normal flujo de la página, aunque aún sigue siendo parte del flujo (a diferencia del posicionamiento absoluto).

*/

/**{ 							'*' selector universal, osea selecciona todos los elementos del html.
	color: red;
}*/

/*h2, h3, ol, etc.. {			selector por elemento.
	color: red;
}*/

/*.lista-ejemplos{				selector por clase (usad cuando un etiqueta padre otorgue una propiedad que compartan todas sus etiquetas hijas).
	color: green;
}*/

/*#Descripcion{		     		selector por id (el valor de id debe ser unico para un elemento(tratar de no usar mas elementos con el mismo valor de id)).
	color: yellow;
}*/


/*li[id="index-pag2"]{			selector por atributo (cuando varias etiquetas comparten "el mismo nombre de atributo", pero refiriendose a tal con un valor en particular)
	color: pink;
}*/

/*---------------------------------------------------------------------------------------------------------------*/

header{
	width: 100vw;				/*viewport: medidas relativas para el renderizado en dispositivos(se adapta a las medidas del hardware)*/
	height: 10vh;
	background-color: #00330c99;
	opacity: 95%;				 /*trasnparencia*/
}
header a{
	font-size: 3em; 			/*1em = 16px 'en general' (dependiendo del navegador).*/
	position: fixed; left: 1230px; top: 13px;
	border-radius:6px;
	box-shadow: 3px 3px 10px 5px #045, 3px 3px 10px 5px #045, 3px 3px 10px 5px #045;
	color: #069;	
	text-shadow: 2px 2px 5px #87ceeb;
}

header a:hover{
	transform: scale(1.1);
	transition: all 0.5s;
}

/*---------------------------------------------------------------------------------------------------------------*/
body{
	background-color: #99ff9999;
	height: 120vh;
}
/*---------------------------------------------------------------------------------------------------------------*/

#bienvenido{
	width: 100vw;
	height: 30vh;
}
#bienvenido h1{
	display: inline-block; 		/*se comporta como un elemento en linea, pero adquiere las propiedades de un elemento en bloque*/	
	width: 500px;				/*aumento del ancho de la caja(tambien con height)*/
	padding-left: .5em;
	color:#045;
	font-size: 4.5em;
}
#bienvenido img[src="img/html.png"]{
	position: absolute; top: 12em; right: 7em;
	z-index: -1;
}

/*---------------------------------------------------------------------------------------------------------------*/

h2{
	margin: 0.4em 0;
	padding-left: 1em;
	color: #045;
	font-size: 2.5em;
}
#Descripcion{
	line-height: 12vh;
	text-align: center;
	text-shadow: 3px 3px 5px #87ceeb, 2px 2px 5px #87ceeb, 2px 2px 5px #87ceeb;
}
#Descripcion p{
	color: #059;
}
#Descripcion p a{		   		/*selector por descendiente(de tal elemento con id(y tambien posible por clase) selecciono un hijo(en su ambito {}) y asi ..)*/
	color: #069;
} 
#Descripcion p a:hover{		   	/*:hover = pseudo-clase*/
	font-size: 1.07em;
	color: #00660099;
} 

/*---------------------------------------------------------------------------------------------------------------*/

h3{
	height: 10vh;
	padding-left: 3em;
	padding-top: 1.5em;
	font-size: 25px; 
	color: #055;
}
#lista_ejem{
	display: inline-block;
	position: relative; left: 20vw;
	margin-top: 2vh;
	font-size: 16px;
}
.ejem__index a{
	display: inline-block;
	height: 35px;
	margin-top: 5px;
	margin-bottom: 5px;
	font-size: 1.2em; 			/*para todos sus nodos hijos, el font size para la medida relativa 1em= 16px. la unidad em es escalable y siempre depende de su elemento padre. Como lista_ejem es la caja padre, entonces para la propiedad font-size, 1em = 16px*/
	/*line-height: 2;			las letras por defecto ocupan 1 line-height, osea 0.5 hacia arriba y hacia abajo de 'ESPACIO' (su caja) desde 'el centro de cada letra'(osea el espacio por defecto que ocpupa la letra). En este caso le decimos que ocupe 0.6*/
	border-radius: 3px;
	color: #059;
	box-shadow: 2px 2px 10px 1px #045;
}
.ejem__index a:hover{ 				
	font-weight: 800;
	background-color: #a7f1a7;
	color: #0809;
	text-shadow: 5px 5px 15px #00cc0066;
	transform: scale(1.12);
	transition: all 0.8s;

}
/*.ejem__index--active{ para darle propiedades solo a la etiqueta de esa clase que tiene el posfijo --active en html(se puede cambiar el posfijo a otras etiqueta manipulando con js).
	color: #059;
}*/

/*---------------------------------------------------------------------------------------------------------------*/



footer p1,p2{
	line-height: 2;
	color:gold;
}

#redes-sociales{
	display: inline-block;
	width: 34.5vw;
	position: relative;left: 65vw;
	/*z-index: -1; ya que redes-sociales es hijo de footer y se sobrepone en lac caja footer, z-index al decirle -1 se anula footer pasaria a interponer en su hijo.*/
}
.contacto{
	width: 80px;
	margin-left: 2vw;
	font-family: Century Gothic;
	color: white;
	text-shadow: 2px 2px 7px #fff;	
}
.contacto:hover{
	color: gold;
}
footer p2{
	display: block;
	width: 38vw;
	position: relative;left: 65vw;
}
footer p2 i{
	position: relative; left: 20px;
	color :#ba1515;
	text-shadow: 1px 1px 3px pink;
	font-family: Century Gothic;
}

footer{
	width: 100vw;
	height: 8.5vh;
	position: fixed; bottom: 0.05vh;
	background-color: #1d511599;
	opacity: 95%;
}